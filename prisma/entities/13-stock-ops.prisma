/// ========== STOCK OPS ==========
model StockAdjustment {
  id          Int     @id @default(autoincrement())
  ingredientId Int   @map("ingredient_id")
  outletId    Int    @map("outlet_id")
  qtyDiff     Decimal @db.Decimal(12, 2) @map("qty_diff")
  reason      String?
  createdAt   DateTime @default(now()) @map("created_at")

  ingredient Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Restrict)
  outlet     Outlet     @relation(fields: [outletId], references: [id], onDelete: Restrict)

  @@map("stock_adjustments")
}

model StockTransfer {
  id           Int     @id @default(autoincrement())
  ingredientId Int     @map("ingredient_id")
  fromOutletId Int?    @map("from_outlet_id")
  toOutletId   Int?    @map("to_outlet_id")
  qty          Decimal @db.Decimal(12, 2)
  createdAt    DateTime @default(now()) @map("created_at")

  ingredient Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Restrict)
  fromOutlet Outlet?    @relation("StockTransferFrom", fields: [fromOutletId], references: [id], onDelete: SetNull)
  toOutlet   Outlet?    @relation("StockTransferTo", fields: [toOutletId], references: [id], onDelete: SetNull)

  @@map("stock_transfers")
}

model Waste {
  id          Int     @id @default(autoincrement())
  ingredientId Int   @map("ingredient_id")
  outletId    Int?   @map("outlet_id")
  qty         Decimal @db.Decimal(12, 2)
  reason      String?
  createdAt   DateTime @default(now()) @map("created_at")

  ingredient Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Restrict)
  outlet     Outlet?    @relation(fields: [outletId], references: [id], onDelete: SetNull)

  @@map("wastes")
}

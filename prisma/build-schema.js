import fs from 'node:fs';
import { dirname, join } from 'node:path';
import { fileURLToPath } from 'node:url';

const __filename = fileURLToPath(import.meta.url);
const prismaDir = dirname(__filename);
const basePath = join(prismaDir, 'base.prisma');
const entitiesDir = join(prismaDir, 'entities');
const schemaPath = join(prismaDir, 'schema.prisma');

if (!fs.existsSync(basePath)) {
  throw new Error('❌ Missing prisma/base.prisma file.');
}

if (!fs.existsSync(entitiesDir)) {
  throw new Error('❌ Missing prisma/entities directory.');
}

const entityFiles = fs
  .readdirSync(entitiesDir)
  .filter((file) => file.endsWith('.prisma'))
  .sort((a, b) => a.localeCompare(b, undefined, { numeric: true }));

if (entityFiles.length === 0) {
  throw new Error('❌ No entity schema files found in prisma/entities.');
}

const header = `// ============================================================
// ⚠️ AUTO-GENERATED FILE — DO NOT EDIT MANUALLY
// Generated by prisma/build-schema.js
// ============================================================

`;

let schemaContent = header;

// Tambah base.prisma
schemaContent += fs.readFileSync(basePath, 'utf-8');

// Tambah setiap entity file
for (const file of entityFiles) {
  const content = fs.readFileSync(join(entitiesDir, file), 'utf-8');
  schemaContent += `\n\n// ===== ${file} =====\n` + content.trim() + '\n';
}

fs.writeFileSync(schemaPath, schemaContent);

console.log(`✅ schema.prisma generated successfully with ${entityFiles.length} entities!`);
